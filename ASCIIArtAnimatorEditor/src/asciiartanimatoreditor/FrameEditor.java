/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package asciiartanimatoreditor;

import asciiartanimator.model.*;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.*;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.ListIterator;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.text.*;

/**
 *
 * @author lachlan
 */
public class FrameEditor extends JPanel {

	private Frame frame;

	/**
	 * Creates new form AnimationEditor
	 */
	public FrameEditor() {
		initComponents();

		//viewTxt.getStyledDocument().addDocumentListener(
		//		new EditorDocumentListener());
		viewTxt.addCaretListener(new CaretListener() {

			@Override
			public void caretUpdate(CaretEvent e) {
				if (e.getMark() != e.getDot()) {
					editorTxt.getCaret().setDot(e.getMark());
					editorTxt.getCaret().moveDot(e.getDot());
				}
			}

		});
	}

	public FrameEditor(Frame frame) {
		this();

		this.frame = frame;
	}

	public void setFrame(Frame frame) {
		this.frame = (frame == null) ? new Frame() : frame;

		refreshComponents();
	}

	public Frame getFrame() {
		return frame;
	}

	private void refreshComponents() {
		editorTxt.setText(frame.getText().getText());
		viewTxt.setText("");

		SimpleAttributeSet attributes = new SimpleAttributeSet();

		Color fore = ColourConverter.fromColour(frame.getText().getForeColour());
		Color back = ColourConverter.fromColour(frame.getText().getBackColour());

		StyleConstants.setForeground(attributes, fore);
		StyleConstants.setBackground(attributes, back);

		try {
			viewTxt.getDocument().insertString(0, frame.getText().getText(),
					attributes);
		} catch (BadLocationException ble) {
			// Should never happen
			ble.printStackTrace();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewTxt = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        editorTxt = new javax.swing.JTextArea();
        setColourBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();

        jSplitPane1.setContinuousLayout(true);

        jScrollPane2.setBackground(new java.awt.Color(1, 1, 1));
        jScrollPane2.setEnabled(false);

        viewTxt.setBackground(new java.awt.Color(1, 1, 1));
        viewTxt.setEditable(false);
        viewTxt.setFont(new java.awt.Font("Courier New", 0, 15)); // NOI18N
        jScrollPane2.setViewportView(viewTxt);

        jSplitPane1.setRightComponent(jScrollPane2);

        editorTxt.setColumns(30);
        editorTxt.setFont(new java.awt.Font("Courier New", 0, 15)); // NOI18N
        editorTxt.setRows(5);
        editorTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                editorTxtKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                editorTxtKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(editorTxt);

        jSplitPane1.setLeftComponent(jScrollPane1);

        setColourBtn.setText("Set Colour");
        setColourBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setColourBtnActionPerformed(evt);
            }
        });

        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(setColourBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setColourBtn)
                    .addComponent(resetBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	private void editorTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editorTxtKeyTyped
		SwingUtilities.invokeLater(new Runnable() {

			@Override
			public void run() {
				int index = editorTxt.getCaretPosition();

				TextSection section = frame.getText();

				section.setText(editorTxt.getText());

				final int finalIndex = index;
				
				refreshComponents();
				editorTxt.setCaretPosition(finalIndex);
			}

		});
	}//GEN-LAST:event_editorTxtKeyTyped

	private void setColourBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setColourBtnActionPerformed
		TextSection section = frame.getText();

		int foreIndex = JOptionPane.showOptionDialog(this,
				"Choose a foreground colour",
				"ASCII Art Animator - Editor",
				JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
				null, Colour.values(), section.getForeColour());
		int backIndex = JOptionPane.showOptionDialog(this,
				"Choose a background colour",
				"ASCII Art Animator - Editor",
				JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
				null, Colour.values(), section.getForeColour());

		if (foreIndex != JOptionPane.CLOSED_OPTION) {
			section.setForeColour(Colour.values()[foreIndex]);
		}
		if (backIndex != JOptionPane.CLOSED_OPTION) {
			section.setBackColour(Colour.values()[backIndex]);
		}

		refreshComponents();
	}//GEN-LAST:event_setColourBtnActionPerformed

	private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
		TextSection section = frame.getText();
		section.setForeColour(Colour.White);
		section.setBackColour(Colour.Black);
		refreshComponents();
	}//GEN-LAST:event_resetBtnActionPerformed

	private void editorTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editorTxtKeyReleased
		SwingUtilities.invokeLater(new Runnable() {

			@Override
			public void run() {
				int index = editorTxt.getCaretPosition();

				TextSection section = frame.getText();

				section.setText(editorTxt.getText());

				final int finalIndex = index;
				
				refreshComponents();
				editorTxt.setCaretPosition(finalIndex);
			}

		});
	}//GEN-LAST:event_editorTxtKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea editorTxt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton setColourBtn;
    private javax.swing.JTextPane viewTxt;
    // End of variables declaration//GEN-END:variables
}
