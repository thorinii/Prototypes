/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package fvtimetracker.gui;

import fvtimetracker.Main;
import fvtimetracker.logic.ApplicationManager;
import java.awt.Frame;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author lachlan
 */
public class SettingsDialog extends JDialog {

	/**
	 * Creates new form SettingsDialog
	 */
	public SettingsDialog(Frame parent) {
		super((Frame) null, true);
		initComponents();

		collectOptions();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        popupTimeoutTxt = new javax.swing.JTextField();
        afcTimeoutTxt = new javax.swing.JTextField();
        alwaysOnTopChk = new javax.swing.JCheckBox();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FV Time Tracker - Settings");
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Time Record Popup Timeout:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Away From Computer Timeout:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(jLabel2, gridBagConstraints);

        popupTimeoutTxt.setText("jTextField3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(popupTimeoutTxt, gridBagConstraints);

        afcTimeoutTxt.setText("jTextField3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(afcTimeoutTxt, gridBagConstraints);

        alwaysOnTopChk.setText("Make Popups Always On Top");
        alwaysOnTopChk.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(alwaysOnTopChk, gridBagConstraints);

        okBtn.setText("OK");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(okBtn, gridBagConstraints);

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(cancelBtn, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
		try {
			saveOptions();
			setVisible(false);
		} catch (NumberFormatException nfe) {
			JOptionPane.showMessageDialog(this, nfe,
					"FV Time Tracker - Settings", JOptionPane.ERROR_MESSAGE);
		}
	}//GEN-LAST:event_okBtnActionPerformed

	private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
		setVisible(false);
	}//GEN-LAST:event_cancelBtnActionPerformed

	private void collectOptions() {
		popupTimeoutTxt.setText(Integer.toString(Main.PREF_ROOT.getInt(
				"popup-timeout-mins",
				ApplicationManager.DEFAULT_POPUP_TIMEOUT)));

		afcTimeoutTxt.setText(Integer.toString(Main.PREF_ROOT.getInt(
				"afc-timeout-mins",
				ApplicationManager.DEFAULT_AFC_TIMEOUT)));

		alwaysOnTopChk.setSelected(Main.PREF_ROOT.getBoolean("always-on-top",
				true));
	}

	private void saveOptions() {
		Main.PREF_ROOT.putInt("popup-timeout-mins",
				Integer.parseInt(popupTimeoutTxt.getText()));
		Main.PREF_ROOT.putInt("afc-timeout-mins",
				Integer.parseInt(afcTimeoutTxt.getText()));

		Main.PREF_ROOT.putBoolean("always-on-top", alwaysOnTopChk.isSelected());
	}

	@Override
	public void setVisible(boolean b) {
		if (b == true) {
			setLocation(Main.PREF_ROOT.getInt("settingsdialog-x", getOwner().
					getX()),
					Main.PREF_ROOT.getInt("settingsdialog-y", getOwner().getY()));
		} else {
			Main.PREF_ROOT.putInt("settingsdialog-x", getX());
			Main.PREF_ROOT.putInt("settingsdialog-y", getY());
		}
		
		super.setVisible(b);
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField afcTimeoutTxt;
    private javax.swing.JCheckBox alwaysOnTopChk;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton okBtn;
    private javax.swing.JTextField popupTimeoutTxt;
    // End of variables declaration//GEN-END:variables
}
